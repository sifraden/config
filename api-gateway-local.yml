server:
  port: 9090
spring:
  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          '[/**]':
            allowedOrigins: '*'
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
      routes:
        - id: product-service
          uri: http://localhost:8082
          predicates:
            - Path= /product/**
          filters:
            - RewritePath= /product(?<segment>/?.*), $\{segment}
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - id: user-service
          uri: http://localhost:8083
          predicates:
            - Path= /user/**
          filters:
            - RewritePath= /user(?<segment>/?.*), $\{segment}
        - id: promotion-service
          uri: lb://promotion-service
          predicates:
            - Path= /promotion/**
          filters:
            - RewritePath= /promotion(?<segment>/?.*), $\{segment}
        - id: search-product-service
          uri: http://localhost:8084
          predicates:
            - Path= /elastic/**
          filters:
            - RewritePath= /elastic(?<segment>/?.*), $\{segment}
        - id: email-service
          uri: http://localhost:8085
          predicates:
            - Path= /mail/**
          filters:
            - RewritePath= /mail(?<segment>/?.*), $\{segment}
        - id: order-service
          uri: http://localhost:8086
          predicates:
            - Path= /order/**
          filters:
            - RewritePath= /order(?<segment>/?.*), $\{segment}
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path= /payment/**
          filters:
            - RewritePath= /payment(?<segment>/?.*), $\{segment}
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${ISSUER_URI:http://localhost:8080/auth/realms/api-gateway}
          jwk-set-uri: ${JWK_SET_URI:http://localhost:8080/auth/realms/api-gateway/protocol/openid-connect/certs}
eureka:
  instance:
    leaseRenewalIntervalInSeconds: 30
  metadataMap:
    instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
    registryFetchIntervalSeconds: 30

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.springframework.cloud.gateway: INFO
