server:
  port: 8086

#logging:
#  config: classpath:logback-spring.xml

logging:
  level:
    org:
      springframework:
        data:
          mongodb: DEBUG
             

spring:
  data:
    mongodb:
      host: ${MONGO_SERVER:localhost}
      port: ${MONGO_PORT:27017}
      database: orders
      #uri: mongodb://localhost:27017/products
    #cassandra:
    #  cluster-name: CassandraCluster
    #  contact-points: ${CASSANDRA_SERVER:localhost}
    #  port: 9042
    #  keyspace-name: orderkeyspace
    #  local-datacenter: datacenter1
    #  schema-action: create_if_not_exists
  sleuth:
    reactor:
      instrumentation-type: manual
    sampler:
      percentage: 1.0
      probability: 1.0
    opentracing:
        enabled: true
  zipkin:
    baseUrl: http://localhost:9411
    #sender:
    #  type: http
  jackson:
    serialization:
      WRITE_DATE_KEYS_AS_TIMESTAMPS: false

kafka:
  bootstrapAddress: ${KAFKA_SERVER:localhost:9092}
  consumer:
    topic: catchup-orders
    groupId: catchupOrdersGroup
  producer:
    topic: orders

# report spans using kafka
#bootstrap:
#  servers: ${KAFKA_SERVER:localhost:9092}
    
consumer:
  payment-service: http://localhost:8087
  
management:
  endpoint:
    web:
      exposure:
        include: "*"
    health:
      show-details: always
      probes:
        enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
        
#opentracing:
#  jaeger:
#    log-spans: true
#    udp-sender:
#      host: localhost
#      port: 6831


